@model RP.Sistema.Web.Models.FolhaPagamento.FolhaVM
@using RP.Util;
@using RP.Util.Class;
@{
    ViewBag.Title = "Folha de pagamento";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="msg-aviso msg-erro">
        <button data-dismiss="alert" class="close btn-msg-aviso" type="button">×</button><div class="msg"></div>
    </div>
    @using (Html.BeginForm())
    {
        <div class="row-fluid">
            <div class="span2">
                <div class="container-nav-list well affix">
                    <ul class="nav nav-list">
                        <li class="nav-header">Ações</li>
                        <li><a href="#" data-form-type="submit" title="Salva registro"><i class="icon-ok-sign"></i>Salvar</a></li>
                        <li class="divider"></li>
                        <li><a href="@Url.Action("Index")" title="Volta para tela inicial"><i class="icon-arrow-left"></i>Voltar</a></li>
                        <li class="divider"></li>
                        <li style="margin-left: -25px">@Html.ValidationMessageFor(model => model.Funcionario.nome, null, new { @class = "help-inline no-required" })</li>
                    </ul>
                </div>
            </div>
            <div class="span10">
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index")">Início</a> <span class="divider">/</span></li>
                    <li class="active">Cadastrar funcionário</li>
                </ul>

                @Html.RenderFlashMessage()
                @Html.CustomValidationSummary(true, true, RP.Util.Resource.Message.SUMMARY_MESSAGE, new { @class = "alert alert-error" })
                <div class="tabbable">
                    <ul class="nav nav-tabs" id="tabContainer">
                        <li class="active"><a href="#tab-dado" data-toggle="tab">Dados pessoais</a></li>
                        <li><a href="#tab-comissao" data-toggle="tab">Comissões do mês</a></li>
                        <li><a href="#tab-proximo" data-toggle="tab">Comissões futuras</a></li>
                    </ul>
                    <div class="form-horizontal">
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab-dado">
                                <div class="control-group">
                                    @Html.CustomLabelFor(model => model.nrAno, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.dsMes, new { @class = "span2", @readonly = "readonly" })
                                        @Html.TextBoxFor(model => model.nrAno, new { @class = "input-small", @readonly = "readonly" })
                                    </div>
                                </div>
                                @Html.HiddenFor(model => model.nrMes)
                                @Html.EditorFor(model => model.Funcionario, "Funcionario/Consultar", new { desabilitar = true })
                                <h4 class="heading">Pontos</h4>
                                <table id="tblPonto">
                                    <thead>
                                        <tr>
                                            <th style="width: 15%; text-align: center; vertical-align: middle" rowspan="2">Dia</th>
                                            <th style="width: 37%; text-align: center" colspan="2">Observações</th>
                                            <th style="width: 16%; text-align: center" colspan="2">Manhã</th>
                                            <th style="width: 16%; text-align: center" colspan="2">Tarde</th>
                                            <th style="width: 16%; text-align: center" colspan="2">Extra</th>
                                        </tr>
                                        <tr>
                                            <th style="width: 12%">Situação</th>
                                            <th style="width: 25%">Descrição</th>
                                            <th style="width: 8%">Entrada</th>
                                            <th style="width: 8%">Saída</th>
                                            <th style="width: 8%">Entrada</th>
                                            <th style="width: 8%">Saída</th>
                                            <th style="width: 8%">Entrada</th>
                                            <th style="width: 8%">Saída</th>
                                        </tr>
                                    </thead>
                                </table>
                                <input type="hidden" id="tblPonto_count" name="tblPonto.count" />
                                @if (Model != null && Model.Pontos != null)
                                {
                                    <input type="hidden" id="tblPonto_data" value="@Json.Encode(Model.Pontos.OrderBy(e => e.nrDia))"/>
                                }
                            </div>
                            <div class="tab-pane" id="tab-comissao">
                                <table id="tblComissao">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th style="width: 15%">Vencimento</th>
                                            <th style="width: 70%">Descrição</th>
                                            <th style="width: 15%">Valor</th>
                                        </tr>
                                    </thead>
                                </table>
                                <input type="hidden" id="tblComissao_count" name="tblComissao.count" />
                                @if (Model != null && Model.Comissoes != null)
                                {
                                    <input type="hidden" id="tblComissao_data" value="@Json.Encode(Model.Comissoes.Select(u => new { dtVencimento = u.dtVencimento.ToString("dd/MM/yyyy"), u.idMovimento, u.valor, u.descricao }))"/>
                                }
                            </div>
                            <div class="tab-pane" id="tab-proximo">
                                <table id="tblProximo">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th style="width: 15%">Vencimento</th>
                                            <th style="width: 70%">Descrição</th>
                                            <th style="width: 15%">Valor</th>
                                        </tr>
                                    </thead>
                                </table>
                                <input type="hidden" id="tblProximo_count" name="tblProximo.count" />
                                @if (Model != null && Model.Proximos != null)
                                {
                                    <input type="hidden" id="tblProximo_data" value="@Json.Encode(Model.Proximos.Select(u => new { dtVencimento = u.dtVencimento.ToString("dd/MM/yyyy"), u.idMovimento, u.valor, u.descricao }))"/>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@{
    string js = "~/" + Guid.NewGuid();

    ScriptBundle scriptBundle = new ScriptBundle(js);
    scriptBundle.Include("~/Scripts/FolhaPagamento/Create.js");
    BundleTable.Bundles.Add(scriptBundle);
}
@section scripts{
    @Scripts.Render(js)
}