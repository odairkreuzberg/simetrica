@model RP.Sistema.Web.Models.Usuario.EditarSenhaVM
@using RP.Util;
@using RP.Util.Class;
@{
    ViewBag.Title = "Alterar senha - Sistema de Gerenciamento";
	Layout = "~/Views/Shared/_Login.cshtml";

    StyleBundle styleBundle = new StyleBundle("~/Content/styles");
    styleBundle.Include("~/Content/bootstrap.css");
    styleBundle.Include("~/Content/bootstrap-overrides.css");
    styleBundle.Include("~/Content/login.css");
    styleBundle.Include("~/Content/sprites-browser.css");
    styleBundle.Include("~/Content/pt-sans.css");
    BundleTable.Bundles.Add(styleBundle);

    ScriptBundle scriptBundle = new ScriptBundle("~/bundles/js");
    scriptBundle.Include("~/Scripts/browser-detect.js");
    scriptBundle.Include("~/Scripts/modernizr-{version}.js");
    scriptBundle.Include("~/Scripts/jquery-{version}.js");
    scriptBundle.Include("~/Scripts/bootstrap.js");
    scriptBundle.Include("~/Scripts/tmpl.js");
    scriptBundle.Include("~/Scripts/jquery.placeholder.js");
    scriptBundle.Include("~/Scripts/Functions.js");
    BundleTable.Bundles.Add(scriptBundle);
}

@section styles
{
    @Styles.Render("~/Content/styles")
    <!--[if lt IE 8]>@Styles.Render("~/Content/ie-unsuported.css")<![endif]--> 
}

@section scripts
{
    @Scripts.Render("~/bundles/js")
    <!--[if lt IE 9]>@Scripts.Render("~/Scripts/html5.js")<![endif]-->

    <script type="text/javascript">
        var NovaSenha = new function () {
            this.timeout = null;

            this.content = function () {
                return $($.trim(tmpl("tmpl-senha-descricao", {})));
            };

            this.title = function (el) {
                var $this = $(el);
                var er = new RegExp($this.attr('data-val-regex-pattern'));
                if (er.test($this.val())) {
                    return '<strong>Critérios da senha</strong>' +
                               '<span class="label label-success pull-right"><i class="icon-ok icon-white"></i> <span>Atende</span>' +
                           '</span>';
                }
                else {
                    return '<strong>Critérios da senha</strong>' +
                               '<span class="label label-important pull-right"><i class="icon-remove icon-white"></i> <span>Não atende</span>' +
                           '</span>';
                }
            };

            this.check = function (el) {
                var $this = $(el);
                var er = new RegExp($this.attr('data-val-regex-pattern'));
                if (er.test($this.val())) {
                    $this.nextAll('.popover').find('.popover-title')
                        .find('.label').removeClass('label-important').addClass('label-success')
                        .find('i').removeClass('icon-remove').addClass('icon-ok')
                        .parent().find('span').text('Atende');
                }
                else {
                    $this.nextAll('.popover').find('.popover-title')
                        .find('.label').removeClass('label-success').addClass('label-important')
                        .find('i').removeClass('icon-ok').addClass('icon-remove')
                        .parent().find('span').text('Não atende');
                }
            };
        };

        $(function () {
            if (window.top.location.href != window.self.location.href) {
                window.parent.location.href = window.self.location.href;
            }

            Functions.detectIeVersion();

            Functions.handlers.placeholder();

            $('#NovaSenha')
                .setFocus()
                .focus(function () {
                    $('#progress-bar').removeClass('hide');
                })
                .blur(function () {
                    $('#progress-bar').addClass('hide');
                })
                .passwordStrength({
                    bar: '#progress-bar',
                    width: '248px',
                    showLabel: false
                })
                .popover({
                    trigger: 'focus',
                    html: true,
                    title: function () {
                        return NovaSenha.title(this);
                    },
                    content: function () {
                        return NovaSenha.content();
                    }
                })
                .keydown(function (e, i) {
                    clearTimeout(NovaSenha.timeout);
                    NovaSenha.timeout = setTimeout(function () {
                        NovaSenha.check(e.target);
                    }, 50);
                });
        });
    </script>

    <script id="tmpl-senha-descricao" type="text/x-tmpl">
        <ul>
            <li>Mínimo de 8 caracteres;</li>
            <li>Pelo menos uma letra maiúscula;</li>
            <li>Pelo menos um caracter númerico;</li>
            <li>Pelo menos um caracter não alfabético (ex: @@, ?, #, %, etc...)</li>
        </ul>
    </script>
}

@using (Html.BeginForm("ChangePassword", "Auth"))
{
    @Html.AntiForgeryToken()
    <div class="top">Alterar senha</div>
    <div class="content">
        @Html.RenderFlashMessage()
        @Html.CustomValidationSummary(true, true, "Verifique os erros abaixo", new { @class = "alert alert-error"})
        <div class="inner">
            <div class="input-prepend">
                <span class="add-on">
                    <i class="icon-user"></i>
                </span>
                @Html.TextBoxFor(e => e.Usuario, new { @maxlength = "200", @readonly = "readonly" })
                @Html.ValidationMessageFor(e => e.Usuario, null, new { @class = "no-required" })
            </div>
            <div class="input-prepend">
                <span class="add-on">
                    <i class="icon-lock"></i>
                </span>
                @Html.PasswordFor(e => e.Senha, new { @value = Model.Senha })
                @Html.ValidationMessageFor(e => e.Senha, null, new { @class = "no-required" })
            </div>
            <div class="input-prepend">
                <span class="add-on">
                    <i class="icon-chevron-right"></i>
                </span>
                @Html.PasswordFor(e => e.NovaSenha, new { @maxlength = "50", @placeholder = "Insira a nova senha" })
                <div id="progress-bar" class="hide"></div>
                @Html.ValidationMessageFor(e => e.NovaSenha, null, new { @class = "no-required" })
            </div>
            <div class="input-prepend">
                <span class="add-on">
                    <i class="icon-chevron-right"></i>
                </span>
                @Html.PasswordFor(e => e.ReNovaSenha, new { @maxlength = "50", @placeholder = "Re-digite a nova senha", @title = "Re-digite a nova senha" })
                @Html.ValidationMessageFor(e => e.ReNovaSenha, null, new { @class = "no-required" })
            </div>
        </div>
    </div>
    <div class="form-actions">
        <button class="btn btn-inverse pull-right" type="submit" title="Alterar senha e acessar o sistema">Alterar</button>
        <a href="@Url.Action("Logout", "Auth")" title="Cancelar alteração e sair do Sistema" class="text-error">Cancelar</a>
    </div>
}