@model RP.Sistema.Web.Models.Modulo.ModuloVM
@using RP.Util;
@using RP.Util.Class;
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span2">
            <div class="container-nav-list well affix">
                <ul class="nav nav-list">
                    <li class="nav-header">Ações</li>
                    <li>@Html.CustomActionLink("Editar", "Edit", new { id = Model.idModulo }, new { @title = "Editar registro" }, new { @left = "icon-edit" })</li>
                    <li>@Html.CustomActionLink("Excluir", "Delete", new { id = Model.idModulo }, new { @title = "Excluir registro" }, new { @left = "icon-trash" })</li>
                    <li class="divider"></li>
                    <li><a href="@Url.Action("Index")" title="Volta para tela inicial"><i class="icon-arrow-left"></i> Voltar</a></li>
                </ul>
            </div>
        </div>
        <div class="span10">
            <ul class="breadcrumb">
                <li><a href="@Url.Action("Index")">Módulos</a> <span class="divider">/</span></li>
                <li class="active">Detalhes do Módulo</li>
            </ul>

        	@Html.RenderFlashMessage()
            @Html.CustomValidationSummary(true, true, RP.Util.Resource.Message.SUMMARY_MESSAGE, new { @class = "alert alert-error" })

            <div class="form-horizontal">
                @{
                    RP.Util.Class.Form editor = Html.Editor();
                    editor.Add(new RP.Util.Class.Line()
                        .Add(
                            Html.LabelFor(model => model.nmModulo),
                            Html.TextBoxFor(model => model.nmModulo, new { @class = "input-xxlarge", @readonly = "readonly" })
                        )
                    );
                    editor.Add(new RP.Util.Class.Line()
                        .Add(
                            Html.LabelFor(model => model.dsModulo),
                            Html.TextAreaFor(model => model.dsModulo, new { @class = "input-xxlarge", @readonly = "readonly" })
                        )
                    );
                    editor.Add(new RP.Util.Class.Line()
                        .Add(
                            Html.LabelFor(model => model.nrOrdem),
                            Html.TextBoxFor(model => model.nrOrdem, new { @class = "input-medium", @readonly = "readonly" })
                        )
                    );
                    editor.Add(new RP.Util.Class.Line()
                        .Add(
                            Html.LabelFor(model => model.nmURL),
                            Html.TextBoxFor(model => model.nmURL, new { @class = "input-xxlarge", @readonly = "readonly" })
                        )
                    );
		        }
			    @editor.Render()
            </div>
        </div>
    </div>
</div>
@{
    string js = "~/" + Guid.NewGuid();

    ScriptBundle scriptBundle = new ScriptBundle(js);
    scriptBundle.Include("~/Scripts/Modulo/Details.js");
    BundleTable.Bundles.Add(scriptBundle);
}
@section scripts{
    @Scripts.Render(js)
}