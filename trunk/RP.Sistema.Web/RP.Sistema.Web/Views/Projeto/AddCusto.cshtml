@model RP.Sistema.Web.Models.Projeto.CustoProjetoVM
@using RP.Util;
@using RP.Util.Class;
@{
    ViewBag.Title = "Adicionar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="msg-aviso msg-erro">
        <button data-dismiss="alert" class="close btn-msg-aviso" type="button">×</button><div class="msg"></div>
    </div>
    @using (Html.BeginForm())
    {
        <div class="row-fluid">
            <div class="span2">
                <div class="container-nav-list well affix">
                    <ul class="nav nav-list">
                        <li class="nav-header">Ações</li>
                        <li><a href="#" data-form-type="submit" title="Salva registro"><i class="icon-ok-sign"></i>Salvar</a></li>
                        <li class="divider"></li>
                        <li><a href="@Url.Action("Index")" title="Volta para tela inicial"><i class="icon-arrow-left"></i>Voltar</a></li>
                    </ul>
                </div>
            </div>
            <div class="span10">
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index")">Início</a> <span class="divider">/</span></li>
                    <li class="active">Adicionar custos</li>
                </ul>

                @Html.RenderFlashMessage()
                @Html.CustomValidationSummary(true, true, RP.Util.Resource.Message.SUMMARY_MESSAGE, new { @class = "alert alert-error" })
                <div class="form-horizontal">
                    <div class="control-group">
                        @Html.CustomLabelFor(model => model.descricao, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(model => model.descricao, new { @class = "span6", @readonly = "readonly" })
                        </div>
                    </div>

                    @Html.EditorFor(model => model.Cliente, "Cliente/Consultar", new { desabilitar = true })
                    @Html.HiddenFor(model => model.idProjeto)
                    <div class="control-group">
                        @Html.CustomLabelFor(e => e.dtInicio, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(model => model.dtInicio, new { @class = "span2", @readonly = "readonly", @mask = "99/99/9999 99:99" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.CustomLabelFor(model => model.status, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(model => model.status, new { @class = "span2", @readonly = "readonly" })
                        </div>
                    </div>
                    
                    <h4 class="heading">Custos</h4>
                    <a id="open-custo" href="#dlg-custo" role="button" class="btn" data-toggle="modal"><i class="icon-plus-sign"></i>Adicionar</a>
                    <table id="tblCusto">
                        <thead>
                            <tr>
                                <th></th>
                                <th style="width: 15%">Data</th>
                                <th style="width: 55%">Descrição</th>
                                <th style="width: 15%">Gerou caixa</th>
                                <th style="width: 15%; text-align: right">Valor (R$)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="message">
                                <td colspan="5">Nenhum custo</td>
                            </tr>
                        </tbody>
                        <tbody>
                            <tr>
                                <td colspan="4">
                                    <span class="pull-right"><strong>Total Geral (R$):</strong></span>
                                </td>
                                <td>
                                    <span class="pull-right"><strong id="vl-total-geral">0,00</strong></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <input type="hidden" id="tblCusto_count" name="tblCusto.count" />
                    @if (Model != null && Model.Custos != null)
                    {
                        <input type="hidden" id="tblCusto_data" value="@Json.Encode(Model.Custos.Select(e => new { e.idProjetoCusto, dtCusto = e.dtCusto.Value.ToString("dd/MM/yyyy"), e.valor, e.descricao, e.gerarConta }).OrderBy(e => e.dtCusto))"/>
                    }
                    <div id="dlg-custo">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                            <h3>Adicionar custo</h3>
                        </div>
                        <div class="modal-body">
                            <div class="control-group">
                                @Html.Label("Custo.dtCusto", "Data", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBox("Custo.dtCusto", null, new { @class = "span2 datepicker", @mask = "99/99/9999" })
                                    <span id="dtCusto-valid" class="field-validation-valid help-inline"></span>
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.Label("Custo.geraconta", "Adicionar no caixa", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.DropDownList("Custo.geraconta", Helper.SimNao(Helper.eSimNao.Não), new { @class = "span2" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.Label("valor", "Valor (R$)", new { @class = "control-label" })
                                <div class="controls  controls-row">
                                    @Html.TextBox("Custo.valor", null, new { @class = "span2", filter = "floatnumber", style = "text-align:right" })
                                    <span id="valor-valid" class="field-validation-valid help-inline"></span>
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.Label("Custo.descricao", "Descrição", new { @class = "control-label" })
                                <div class="controls  controls-row">
                                    @Html.TextArea("Custo.descricao", null, new { @class = "span6", maxlength = "255" })
                                    <span id="descricao-valid" class="field-validation-valid help-inline"></span>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <a href="#" id="add-custo" class="btn btn-primary">Adicionar</a>
                            <button class="btn" data-dismiss="modal" aria-hidden="true">Fechar</button>
                        </div>
                    </div>
                </div>
                <h4 class="heading">Obsrvaçao</h4>
                <span class="label" style="font-size: larger; color: rgb(129, 100, 100); background: #fff">Atenção* O cancelamento de um custo que tenha gerado caixa, automaticamente será cancelado a despesa e o valor em caixa sera alterado.</span><br />
            </div>
        </div>
    }
</div>
@{
    string js = "~/" + Guid.NewGuid();

    ScriptBundle scriptBundle = new ScriptBundle(js);
    scriptBundle.Include("~/Scripts/Projeto/AddCusto.js");
    BundleTable.Bundles.Add(scriptBundle);
}
@section scripts{
    @Scripts.Render(js)
}